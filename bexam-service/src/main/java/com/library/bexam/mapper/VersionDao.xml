<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.library.bexam.dao.VersionDao">
    <resultMap id="BaseResultMap" type="com.library.bexam.entity.VersionEntity">
        <id column="version_id" jdbcType="INTEGER" property="versionId"/>
        <result column="version_name" jdbcType="VARCHAR" property="versionName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <association property="subjectEntity" javaType="com.library.bexam.form.SubjectForm">
            <id column="subject_id" jdbcType="INTEGER" property="subjectId"/>
            <result column="subject_name" jdbcType="VARCHAR" property="subjectName"/>
        </association>
        <collection property="textBookEntityList" ofType="com.library.bexam.form.TextBookForm">
            <id column="book_id" jdbcType="INTEGER" property="textBookId"/>
            <result column="book_name" jdbcType="VARCHAR" property="textBookName"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        distinct version.version_id,version.version_name, DATE_FORMAT(version.create_time,'%Y-%m-%d %H:%i:%s') as create_time,
        book.book_id,book.book_name,sub.subject_id,sub.subject_name
    </sql>
    <insert id="addVersion" parameterType="com.library.bexam.entity.VersionEntity" useGeneratedKeys="true" keyProperty="versionId">
        insert into exam_version
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="versionId!=0">
                version_id,
            </if>
            <if test="versionName!=null and versionName!=''">
                version_name,
            </if>
            <if test="createTime!=null and createTime!=''">
                create_time,
            </if>
        </trim>
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="versionId!=0">
                #{versionId},
            </if>
            <if test="versionName!=null and versionName!=''">
                #{versionName},
            </if>
            <if test="createTime!=null and createTime!=''">
                #{createTime},
            </if>
        </trim>
    </insert>
    <insert id="addVersionList"  parameterType="com.library.bexam.entity.VersionEntity" useGeneratedKeys="true" keyProperty="versionId">
        insert into exam_version(version_id,version_name,create_time)
        values
        <if test="list!=null and list.size()>0">
            <foreach item="item" collection="list" separator=",">
                (#{item.versionId},#{item.versionName},#{item.createTime})
            </foreach>
        </if>
    </insert>
    <insert id="addSubject2Version">
        insert into exam_subject2version(subject_id,version_id)
        values
        <if test="list!=null and list.size()>0">
            <foreach item="item" collection="list" separator=",">
                (#{item.subjectId},#{item.versionId})
            </foreach>
        </if>
    </insert>
    <select id="searchVersionList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from exam_version version
        left join exam_subject2version sub2ver on sub2ver.version_id=version.version_id
        left join exam_subject sub on sub.subject_id=sub2ver.subject_id
        left join exam_version2textbook ver2book on ver2book.version_id=version.version_id
        left join exam_textbook book on book.book_id=ver2book.book_id
        order by version.version_id asc
    </select>

    <select id="getVersionListBySubId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select  distinct version.version_id,version.version_name, DATE_FORMAT(version.create_time,'%Y-%m-%d %H:%i:%s') as create_time,
        sub.subject_id,sub.subject_name
        from exam_version version
        left join exam_subject2version sub2ver on sub2ver.version_id=version.version_id
        left join exam_subject sub on sub.subject_id=sub2ver.subject_id
        where sub.subject_id=#{subjectId}
        order by version.version_id asc
    </select>
</mapper>